export declare const GeneralColumnType: {
    readonly BIT: "bit";
    readonly VARBIT: "varbit";
    readonly BOOLEAN: "boolean";
    readonly CHAR: "char";
    readonly VARCHAR: "varchar";
    readonly TINYTEXT: "tinytext";
    readonly MEDIUMTEXT: "mediumtext";
    readonly TEXT: "text";
    readonly LONGTEXT: "longtext";
    readonly CLOB: "clob";
    readonly INET: "inet";
    readonly TINYINT: "tinyint";
    readonly SMALLINT: "smallint";
    readonly MEDIUMINT: "mediumint";
    readonly INTEGER: "integer";
    readonly BIGINT: "bigint";
    readonly DECIMAL: "decimal";
    readonly LONG: "long";
    readonly LONGLONG: "longlong";
    readonly NUMERIC: "numeric";
    readonly FLOAT: "float";
    readonly DOUBLE_PRECISION: "double_precision";
    readonly REAL: "real";
    readonly SERIAL: "serial";
    readonly MONEY: "money";
    readonly JSON: "json";
    readonly JSONB: "jsonb";
    readonly LINE: "line";
    readonly LSEG: "lseg";
    readonly MACADDR: "macaddr";
    readonly PATH: "path";
    readonly PG_LSN: "pg_lsn";
    readonly POINT: "point";
    readonly POLYGON: "polygon";
    readonly GEOMETRY: "geometry";
    readonly TIME: "time";
    readonly TIME_WITH_TIME_ZONE: "time_with_time_zone";
    readonly DATE: "date";
    readonly TIMESTAMP: "timestamp";
    readonly TIMESTAMP_WITH_TIME_ZONE: "timestamp_with_time_zone";
    readonly YEAR: "year";
    readonly ENUM: "enum";
    readonly SET: "set";
    readonly TSQUERY: "tsquery";
    readonly TSVECTOR: "tsvector";
    readonly TXID_SNAPSHOT: "txid_snapshot";
    readonly UUID: "uuid";
    readonly CIDR: "cidr";
    readonly CIRCLE: "circle";
    readonly BOX: "box";
    readonly BYTEA: "bytea";
    readonly BINARY: "binary";
    readonly VARBINARY: "varbinary";
    readonly BLOB: "blob";
    readonly TINYBLOB: "tinyblob";
    readonly MEDIUMBLOB: "mediumblob";
    readonly LONGBLOB: "longblob";
    readonly XML: "xml";
    readonly NAME: "name";
    readonly ARRAY: "array";
    readonly XID: "xid";
    readonly INTERVAL: "interval";
    readonly OID: "oid";
    readonly REGTYPE: "regtype";
    readonly REGPROC: "regproc";
    readonly PG_NODE_TREE: "pg_node_tree";
    readonly PG_NDISTINCT: "pg_ndistinct";
    readonly PG_DEPENDENCIES: "pg_dependencies";
    readonly OBJECT: "object";
    readonly VARIANT: "variant";
    readonly UNKNOWN: "unknown";
};
export type GeneralColumnType = (typeof GeneralColumnType)[keyof typeof GeneralColumnType];
